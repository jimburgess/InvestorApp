@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<form method="post" asp-action="post">
    <div class="form-group">
        <label asp-for="LumpSum" class="col-md-2 control-label"></label>

        <input asp-for="LumpSum" />

    </div>
    <div class="form-group">
        <label asp-for="Monthly" class="col-md-2 control-label"></label>
        <input asp-for="Monthly" />
    </div>
    <div class="form-group">
        <label asp-for="Target" class="col-md-2 control-label"></label>
        <input asp-for="Target" />
    </div>
    <div class="form-group">
        <label asp-for="Timescale" class="col-md-2 control-label"></label>
        <input asp-for="Timescale" />
    </div>
    <div class="form-group">
        <label asp-for="RiskLevel" class="col-md-2 control-label"></label>
        <select asp-for="RiskLevel" asp-items="Html.GetEnumSelectList<IndexModel.Level>()">
            <option value="">Choose a risk level</option>
        </select>
    </div>
    <div class="form-group">
        <input type="submit" />
    </div>
</form>
@{ if (!string.IsNullOrWhiteSpace(Model.GraphData))
    {
<div>
    <canvas id="myChart"></canvas>
</div>
<script>
    @*const data = {
        labels: @Html.Raw(Json.Serialize(Model.XLabels)),
        datasets: [{
            label: 'My First dataset',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: [0, 10, 5, 2, 20, 30, 4]
        }]
    };*@
    const data = @Html.Raw(Model.GraphData);
    const config = {
        type: 'line',
        data,
        options: {}
    };
  var myChart = new Chart(
    document.getElementById('myChart'),
    config
  );
</script>
        }
    }
